<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>icoParent</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objObject</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set variables
z = 0;
///Animation speed
image_spd = 0;
///Velocity &amp; limits
vx = 0;
vy = 0;
vz = 0;
v_max = 5;
///Gravity (z direction)
grav = 0;
///Friction
ground_frict = 0.4;
///Acceleration
ground_acc = 0.4;
///Movement
move_left = false;
move_right = false;
move_up = false;
move_down = false;
///Misc
take_damage = 0;
damage_timer = 0;
damage_colour = c_white;
blood_colour = make_colour_rgb(172, 50, 50);
invincible = 0;
invincible_when_hit = false;
///Attributes
max_hp = 50;
hp = max_hp;




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Prompt doors to check
objLevel.check_timer = room_speed/3;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keep GM variables constant
speed = 0;
gravity = 0;
image_speed = 0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Limit speed
if (vx &gt; v_max)
{
    vx = v_max;
}
if (vx &lt; -v_max)
{
    vx = -v_max;
}
if (vy &gt; v_max)
{
    vy = v_max;
}
if (vy &lt; -v_max)
{
    vy = -v_max;
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
var s = objControl.game_speed;

///Set acceleration and friction
var acc = ground_acc*s;
var frict = ground_frict*s;

///Movement
//Left
if (move_left &amp;&amp; !move_right)
{
    if (vx &gt; 0)
    {
        vx = approach(vx, 0, frict);
    }
    vx = approach(vx, -v_max, acc);
}
//Right
if (move_right &amp;&amp; !move_left)
{
    if (vx &lt; 0)
    {
        vx = approach(vx, 0, frict);
    }
    vx = approach(vx, v_max, acc);
}
//Up
if (move_up &amp;&amp; !move_down)
{
    if (vy &gt; 0)
    {
        vy = approach(vy, 0, frict);
    }
    vy = approach(vy, -v_max, acc);
}
//Down
if (move_down &amp;&amp; !move_up)
{
    if (vy &lt; 0)
    {
        vy = approach(vy, 0, frict);
    }
    vy = approach(vy, v_max, acc);
}

///Horizontal Friction
if (!move_left &amp;&amp; !move_right)
{
    vx = approach(vx, 0, frict);
}
///Vertical Friction
if (!move_up &amp;&amp; !move_down)
{
    vy = approach(vy, 0, frict);
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Take damage
///The take_damage variable is set (to the number of damage taken) 
///when you want an entity to take damage.
///This bit of code reduces their hp by the amount of damage.
if (take_damage &gt; 0)
{
    //Reduce the entity's hp
    hp -= take_damage;
    //If hp is less than 0 destroy the entity.
    //Death animations and whatnot should be handled
    //in the "destroy" event.
    if (hp &lt;= 0)
    {
        instance_destroy();
    }
    //Reset the take_damage variable
    take_damage = 0;
    //Check if we want to become invincible
    //for a second after being hit.
    //OR flash white for 6 steps.
    if (invincible_when_hit)
    {
        invincible = room_speed;
    }
    else
    {
        damage_timer = 6;
    }
    //Create a blood splat effect
    //and draw some blood splats on the floor
    create_effect(x, y, sprSplat2, 1/3, blood_colour);
    repeat(3)
    {
        var v = 6;
        var xx = x+random_range(v, -v);
        var yy = y+random_range(v, -v);
        var sc = random_range(0.25, 0.7);
        draw_to_floor(sprBlood, 0, xx, yy, sc, sc, 0, blood_colour, 0.8);
    }
}
damage_timer -= s;
invincible -= s;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEntity">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bounce off
var dir = point_direction(other.x, other.y, x, y);
add_speed(1, dir);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw sprite
if (invincible &gt; 0)
{
    if (floor(invincible/5) mod 2 == 0)
    {
        draw_sprite_ext(sprite_index, -1, x, y, xscale, yscale, image_angle, image_blend, image_alpha);
    }
}
else
{
    if (damage_timer &gt; 0)
    {
        d3d_set_fog(true, damage_colour, 0, 1);
    }
    draw_sprite_ext(sprite_index, -1, x, y, xscale, yscale, image_angle, image_blend, image_alpha);
    if (damage_timer &gt; 0)
    {
        d3d_set_fog(0, 0, 0, 0);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
