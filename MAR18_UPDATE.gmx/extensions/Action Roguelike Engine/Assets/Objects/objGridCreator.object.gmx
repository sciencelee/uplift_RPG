<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRooms</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

/*
 * NOTE:
 * This object should NEVER be used in the main game,
 * and should only be used in roomGridCreator.
 * it would be better to keep this as a separate
 * project, but the yoyogames marketplace doesn't
 * allow multiple projects as part of the same
 * asset!
 * When you want to use this object to create new
 * level chunks, just drag roomGridCreator to the
 * top of the room list, so that it is run before
 * roomStart.
 * The output file (grids.ini) is saved to your
 * %LocalAppData%/&lt;project name&gt; folder, but
 * you should put it in your "Included files"
 * instead, so that it's there when the game is
 * installed.
 *
 * Tl;dr: This object creates level chunks, and is
 *        not part of the main game.
 */

///Set up log
log = ds_list_create();
ds_list_add(log, "Initializing...");

//Set up list of sprites to convert
sprite_list = ds_list_create();
section_list = ds_list_create();
ds_list_add(sprite_list, sprStartRooms, 
                         sprRooms,
                         sprHorizontalRooms,
                         sprVerticalRooms,
                         sprItemRooms,
                         sprBossRooms,
                         sprShopRooms,
                         sprEndRooms);
for (var i = 0; i &lt; ds_list_size(sprite_list); i++)
{
    section_list[|i] = sprite_get_name(sprite_list[|i]);
}

current_sprite = 0;
section = section_list[| current_sprite];
sprite_index = sprite_list[| current_sprite];

//Set up list of sprites to convert
list = ds_list_create();
var size = image_number;
for (var i = 0; i &lt; size; i++)
{
    ds_list_add(list, i);
}

//Misc
draw_set_colour(c_white);
timer = room_speed/2;
timer_enabled = true;
current = -1;
filename = "data.ini";



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reduce timer
if (timer_enabled)
{
    timer--;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Convert sprite to grid on timer
if (timer &lt;= 0 &amp;&amp; timer_enabled)
{
    if (current == -1)
    {
        ds_list_add(log, "Converting sprite "+string(current_sprite));
    }
    current += 1;
    timer = 1;
    if (current &lt; image_number)
    {
        //------------------------\\
        //Convert image to ds_grid\\
        //------------------------\\
        var w = sprite_width;
        var h = sprite_height;
        ///Create grid and surface
        surface = surface_create(w, h);
        grid = ds_grid_create(w, h);
        ///Draw image to surface
        surface_set_target(surface);
            draw_clear_alpha(0, 0);
            draw_sprite(sprite_index, current, 0, 0);
        surface_reset_target();
        ///Loop through each pixel and
        ///Create colour grid
        for (var xx = 0; xx &lt; w; xx++)
        for (var yy = 0; yy &lt; h; yy++)
        {
            var c = surface_getpixel(surface, xx, yy);
            grid[# xx, yy] = c;
        }
        ///Destroy surface
        surface_free(surface);
        ///Write grid to string
        var str = ds_grid_write(grid);
        ///Destroy grid
        ds_grid_destroy(grid);
        ///Write grid sting to file
        ini_open(filename);
            ini_write_string(section, string(current), str);
        ini_close();
    }
    else
    {
        current_sprite++
        ///Write total number of grids to file
        ini_open(filename);
        ini_write_real(section, "total", image_number-1);
        ini_close();
        if (current_sprite &lt; ds_list_size(sprite_list))
        {
            sprite_index = sprite_list[| current_sprite];
            section = section_list[| current_sprite];
            current = -1;
        }
        else
        {
            //-------------------\\
            //Finished converting\\
            //-------------------\\
            ds_list_add(log, "COMPLETE!");
            ds_list_add(log, "Data file written to working directory");
            ds_list_add(log, '"'+filename+'"');
            ds_list_add(log, "Press Enter to exit");
            timer_enabled = false;
            current = -1;
            
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Exit
if (!timer_enabled)
{
    if (keyboard_check_pressed(vk_enter))
    {
        game_end();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw log
var size = ds_list_size(log);
var a = 24;
var xx = 16;
var yy = 16;
for (var i = 0; i &lt; size; i++)
{
    draw_text(xx, yy, string(log[| i]));
    yy += a;
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw current sprite
if (current &gt; -1)
{
    var s = 10;
    var w = (sprite_width*s)/2;
    var h = (sprite_height*s)/2;
    draw_sprite_ext(sprite_index, current, room_width*.75-w, room_height/2-h, s, s, 0, c_white, 1);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
