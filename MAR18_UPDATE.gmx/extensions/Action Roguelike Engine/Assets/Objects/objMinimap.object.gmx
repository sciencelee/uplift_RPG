<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>icoMap</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set variables
w = global.level_width;
h = global.level_height;

cell_w = 7;
cell_h = 6;

total_w = w*cell_w;
total_h = h*cell_h;

border_alpha = 0.6;
back_alpha = 0.3;
map_alpha = 1;

surface = 0;//surface_create(total_w, total_h);
//event_user(0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Free memory used by surface
if (surface_exists(surface))
{
    surface_set_target(surface)
    draw_clear_alpha(0, 0);
    surface_reset_target();
    surface_free(surface);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create &amp; draw surface
surface_set_target(surface);
    draw_clear_alpha(0, back_alpha);
    draw_set_colour(c_black);
    draw_set_alpha(border_alpha);
    draw_rectangle(0, 0, total_w-1, total_h-1, true);
    draw_set_alpha(1);
    draw_set_colour(c_white);
    for (var xx = 0; xx &lt; w; xx++)
    for (var yy = 0; yy &lt; h; yy++)
    {
        var a = objLevel.room_grid[# xx, yy];
        if (a != noone)
        if (instance_exists(a))
        {
            if (a.seen)
            {
                switch (a.type)
                {
                    default:
                        i = 2;
                        break;
                    case room_type.item:
                        i = 3;
                        break;
                    case room_type.shop:
                        i = 4;
                        break;
                    case room_type.boss:
                        i = 5;
                        break;
                    case room_type.goal:
                        i = 6;
                        break;
                }
                var alpha = 0.5;
                if (a.visited)
                {
                    alpha -= 0.5;
                }
                if (a.current)
                {
                    i = 1;
                }
                var cell_x = xx*cell_w;
                var cell_y = yy*cell_h;
                draw_sprite(sprMapRoom, i, cell_x, cell_y);
                draw_sprite_ext(sprMapRoom, 0, cell_x, cell_y, 1, 1, 0, 0, alpha);
            }
        }
    }
surface_reset_target();


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw surface to screen
if (!surface_exists(surface) || surface == 0)
{
    surface = surface_create(total_w, total_h);
    event_user(0);
}
else
{
    var v = 8;
    var surf_x = view_xview+view_wview-total_w-v;
    var surf_y = view_yview+v;
    draw_surface_ext(surface, surf_x, surf_y, 1, 1, 0, c_white, map_alpha);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
