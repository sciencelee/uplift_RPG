<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>objWeapon</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set stats &amp; variables
damage = 10;
pushback = 0;
fire_rate = 1;

cooldown = 0;
gun = 1; //There are 2 pistols, this variable controls which pistol is firing next
flash_colour = make_colour_rgb(255, 255, 128);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check if active
if (active)
{
    ///Reduce parent's movement speed
    parent.v_max = parent.RunSpeed/2+parent.ShootRunSpeed;
    
    ///Set sprite depending on facing direction
    with (parent)
    {
        ///Set the parent's sprite depending on facing direction
        ///And a different sprite if moving
        if (move_left || move_right || move_up || move_down)
        {
            image_spd = 0.1;
            set_directional_sprite(sprPlayerShootUpWalk, sprPlayerShootDownWalk, sprPlayerShootLeftWalk, sprPlayerShootRightWalk);
        }
        else
        {
            image_spd = 0;
            set_directional_sprite(sprPlayerShootUp, sprPlayerShootDown, sprPlayerShootLeft, sprPlayerShootRight);
        }
    }
    
    ///If we can shoot,
    ///Create a projectile
    ///then reset the shoot cooldown
    if (cooldown &lt;= 0)
    {
        var xx = parent.x;
        var yy = parent.y;
        var add = 10;
        ///Set the position of the bullet
        ///depending on our parent's facing direction
        switch (parent.facing)
        {
            case facing.up:
                yy -= add;
                xx += gun*3;
                break;
            case facing.down:
                yy += add;
                xx += gun*3;
                break;
            case facing.left:
                xx -= add;
                yy += 1+gun;
                break;
            case facing.right:
                xx += add;
                yy += 1+gun;
                break;
        }
        ///Get the damage, pushback &amp; speed
        ///of the bullet we're about to create
        var dmg = damage+parent.RangedDamage;
        var psh = pushback+parent.RangedPushback;
        var spd = 8;
        create_projectile(xx, yy, parent.id, objBullet, dmg, psh, spd, parent.facing);
        create_effect(xx, yy, sprSplatMini, 0.4, flash_colour);
        ///Set the next cooldown period
        cooldown = 16*fire_rate*parent.RangedSpeed;
        ///Set the next gun to fire
        gun *= -1;
    }
    
    ///When done, set active to false
    ///This is so that the weapon doesn't continue firing
    ///Even after the player leaves the "shoot" state.
    ///"active" is continuously being set to true while
    ///the handle_shoot() script is being run.
    active = false;
}

///Continue to cool down even when not active
cooldown -= objControl.game_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
